/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package multicast;

import datagrama.DatagramCliente;
import datagrama.DatagramServidor;
import flujo.Servidor;
import java.io.File;
import java.util.ArrayList;
import javafx.util.Pair;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Maurcio10
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    private int miPuerto;
    private int panterior;
    private int psiguiente;
    private SMulticastThread objsMulticast;
    private CMulticastThread objcMulticast;
    private DatagramServidor servidorDatagrama;
    private Servidor servidor;
    private Timer timer;
    
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        portS = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        archivoObjetivo = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nsig = new javax.swing.JLabel();
        nant = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nodo = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        progreso = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 153));

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        jLabel1.setText("Servidores Activos");

        jButton1.setText("CONECTAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        portS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portSActionPerformed(evt);
            }
        });

        jLabel2.setText("Puerto de Servicio: ");

        archivoObjetivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                archivoObjetivoActionPerformed(evt);
            }
        });

        jButton2.setText("Buscar Archivo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Nodo Anterior:");

        jLabel5.setText("Nodo Siguiente: ");

        nsig.setText(" ");

        nant.setText(" ");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel6.setText("Notificaciones");

        jLabel7.setText("Nombre del archivo:");

        nodo.setText("Numero de Nodo: ");

        jLabel8.setText("Progreso:");

        progreso.setText("-------------");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(2, 2, 2)
                        .addComponent(portS, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(nodo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jButton1))
                                .addGap(84, 84, 84))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nant, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nsig, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 129, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(progreso)
                                        .addGap(38, 38, 38)
                                        .addComponent(jButton2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(41, 41, 41)
                                        .addComponent(archivoObjetivo, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(nant))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(nsig)))
                    .addComponent(nodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 11, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(portS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(40, 40, 40)
                        .addComponent(jButton1)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(archivoObjetivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(progreso)))))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(portS.getText() == "") JOptionPane.showMessageDialog(rootPane,"P"
                + "or favor, ingrese los puertos");
        else{
            int portMa=3000;
            jButton1.setEnabled(false);
            miPuerto = Integer.parseInt(portS.getText());
            nodo.setText(String.valueOf(miPuerto));
            
            /*Inicializa el cliente y servidor multicast*/
            objsMulticast = new SMulticastThread(portMa,portS.getText());
            objsMulticast.start();
            objcMulticast = new CMulticastThread(miPuerto);
            objcMulticast.start();
            
            /*Inicializa el servidor de datagramas, mas abijito en
            este mismo metodo actualizo tu nodo anterior y siguiente cada 3 segundos*/
            
            servidorDatagrama = new DatagramServidor(miPuerto,0,0,objcMulticast);
            servidorDatagrama.setPuertoAnt(objcMulticast.getAnterior());
            servidorDatagrama.setPuertoSig(objcMulticast.getSiguiete());
            servidorDatagrama.start();
            
            /*Iniciamos el servidor de rmi*/
            servidor = new Servidor(miPuerto);
            servidor.start();
            
            /*Inicializamos el timer*/
            timer = new Timer(objcMulticast);
            timer.start();
            
            File directorio=new File("../"+miPuerto); 
            directorio.mkdir(); 
            
            new Thread(new Runnable() {
                public void run() {
                    for (;;) {
                        ArrayList<Pair<Integer,String>> list = objcMulticast.getList();
                        // Runs inside of the Swing UI thread
                        SwingUtilities.invokeLater(new Runnable() {
                        public void run() {
                            textArea.setText("");
                            for(int i = 0; i<list.size(); i++){
                                textArea.append(list.get(i).getValue()+"\n");
                            }
                            panterior = objcMulticast.getAnterior();
                            psiguiente = objcMulticast.getSiguiete();
                            
                            /*actualiza el puerto anterior y siguiente del nodo
                             del servidor de datgrama */
                            servidorDatagrama.setPuertoAnt(panterior);
                            servidorDatagrama.setPuertoSig(psiguiente);
                            
                            nant.setText(String.valueOf(panterior));
                            nsig.setText(String.valueOf(psiguiente));                           
                        }});
                        try {
                            java.lang.Thread.sleep(3000);
                        }
                        catch(Exception e) { }
                    }
                }
            }).start();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void portSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portSActionPerformed

    private void archivoObjetivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_archivoObjetivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_archivoObjetivoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(archivoObjetivo.getText() == "") JOptionPane.showMessageDialog(rootPane,"P"
                + "Por favor, ingrese el nombre del archivo.");
        else{
            String nombre = archivoObjetivo.getText();
            String miPuerto = Integer.toString(this.miPuerto);
            /*La estructura del paquete es:
                NombreArchivo$PuertoEmisor$Direcciones$MD5s
                    NombreaArchivo: String
                    PuertoEmisor: Entero
                    Direciones: String
                    MD5s

                    La estructura de Direcciones es:
                        Ip:Puerto
                    La estructura de MD5s es:
                        MD5:MD5:MD5
            */
            String paquete = nombre + '$' + miPuerto + '$' + "0:0:" + '$' +  "0";
            //Necito el puerto siguiente :'v
            //Aqui esta, deja de estar chingando >:v
            //Solo accede a la variable psiguiente y ya :v
            jTextArea1.append("Iniando busqueda de archivo = " + nombre + " en " +  psiguiente + "\n");
            DatagramCliente cliente = new DatagramCliente(paquete, psiguiente,findId(psiguiente));
            cliente.run();
            new Thread(new Runnable() {
                public void run() {
                    for(;;){
                        // Runs inside of the Swing UI thread
                        SwingUtilities.invokeLater(new Runnable() {
                        public void run() {
                             if(servidorDatagrama.isEncontrado()){
                                progreso.setText("100%");
                                servidorDatagrama.setEncontrado(false);
                            }
                        }});
                        try {
                            java.lang.Thread.sleep(2000);
                        }
                        catch(Exception e) { }
                        progreso.setText("------");
                    }
                }
            }).start();
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    public String findId(int target){
        String host = "";
        for(int i = 0; i<objcMulticast.getList().size(); i++){
            if(objcMulticast.getList().get(i).getKey() == target ){
                host = getIp(objcMulticast.getList().get(i).getValue());
            }
        }
        return host;
    }
    public String getIp(String id){
        String ip = "";
        boolean isIp = false;
        for(int i = 0; i<id.length();i++){
            if(isIp) ip += id.charAt(i); 
            if(id.charAt(i) == '/') isIp = true;
        }
        return ip;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField archivoObjetivo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel nant;
    private javax.swing.JLabel nodo;
    private javax.swing.JLabel nsig;
    private javax.swing.JTextField portS;
    private javax.swing.JLabel progreso;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
